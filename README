Reversi is a suite of programs to play the Reversi (Othello) board game.

The source code is written in Clojure.

The program is distributed under the GNU GPLv3 license.

The step followed are:

 (1) Adapt the COMMON LISP programs taken from the PAIP book to run smoothly in the following env:

      - Ubuntu 9.10
      - SBCL compiled from source, downloaded from  git://sbcl.boinkor.net/sbcl.git
      - Emacs compiled from source, downloaded from git://git.savannah.gnu.org/emacs.git
      - Slime downloaded from the official cvs repository

      To operate the program:
      From the SLIME PROMPT type:

      	   (asdf:operate 'asdf:load-op 'reversi)
     	   (in-package :reversi)

    The aim is to use the PAIP (Paradigm of Artificial Intelligence Programming. Case Studies in Common Lisp) examples
    that describe how to write an AI strategy to play the board game named REVERSI.

     First objective is to make the code working with a current version of SBCL under Linux.

 (2) Translate the CL code into Clojure.

      - This is work in progress. The basic game rules are working. The minimax and alpha-beta functions are ok.
      - Unit tests are under construction.
      - The complete translation of advanced tecniques is not started (Reversi tournament, and Iago strategy)

 (3) Future steps could be:

      - Develop a complete analysis suite.
      - Develop a graphical UI
      - Further enhance advanced strategies
      - Develop a neural net evaluetion function
      - Develop a genetic algorithm that iterate the evaluation function evolution 