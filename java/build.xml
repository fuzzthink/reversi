<!--
    build.xml
    
    Copyright (c) 2010 Roberto Corradini. All rights reserved.
  
    This file is part of the reversi program
    http://github.com/rcrr/reversi
  
    This program is free software; you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation; either version 3, or (at your option) any
    later version.
  
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.
  
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
    or visit the site <http://www.gnu.org/licenses/>.
-->

<project name="JavaReversi" basedir="." default="main">

  <property name="src.dir" value="src"/>

  <property name="build.dir" value="build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="jar.dir" value="${build.dir}/jar"/>

  <property name="javadoc.dir" value="${build.dir}/javadoc"/>

  <property name="test.src.dir" value="test"/>
  <property name="test.classes.dir" value="${build.dir}/test/classes"/>
  <property name="test.data.dir" value="${build.dir}/test/data"/>
  <property name="test.reports.dir" value="${build.dir}/test/reports"/>

  <property name="cloc.dir" value="${build.dir}/cloc"/>

  <property name="docs.dir" value="docs"/>
  <property name="docs.checkstyle.dir" value="${docs.dir}/checkstyle"/>
  <property name="checkstyle.reports.dir" value="${build.dir}/checkstyle"/>

  <property name="lib.dir" value="lib"/>

  <path id="lib.classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>

  <property name="main-class" value="rcrr.reversi.Reversi"/>

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>
  
  <target name="compile">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" 
	   destdir="${classes.dir}" 
	   classpathref="lib.classpath" 
	   includeAntRuntime="false">
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
      <manifest>
	<attribute name="Main-Class" value="${main-class}"/>
	<!-- Who is building this jar? -->
	<attribute name="Built-By" value="Roberto Corradini"/>
	<!-- Information about the program itself -->
	<attribute name="Implementation-Vendor" value="Roberto Corradini"/>
	<attribute name="Implementation-Title" value="Java Reversi"/>
	<attribute name="Implementation-Version" value="0.0.1"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="jar">
    <java fork="true" classname="${main-class}">
      <classpath>
	<pathelement location="${jar.dir}/${ant.project.name}.jar"/>
	<path refid="lib.classpath"/>
      </classpath>
      <arg value="rcrr.reversi.AlphabetaSearcherCountDifference"/>
      <arg value="rcrr.reversi.AlphabetaSearcherWeightedSquares"/>
    </java>
  </target>

  <target name="human" depends="jar">
    <java fork="true" classname="${main-class}">
      <classpath>
	<pathelement location="${jar.dir}/${ant.project.name}.jar"/>
	<path refid="lib.classpath"/>
      </classpath>
      <arg value="rcrr.reversi.HumanStrategy"/>
      <arg value="rcrr.reversi.MaximizeDifference"/>
    </java>
  </target>

  <target name="test.compile" depends="jar">
    <delete dir="${test.classes.dir}"/>
    <mkdir dir="${test.classes.dir}"/>
    <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" includeAntRuntime="false">
      <classpath>
	<pathelement location="${jar.dir}/${ant.project.name}.jar"/>
	<path refid="lib.classpath"/>
      </classpath>
    </javac>
  </target>

  <target name="test" depends="test.compile">
    <delete dir="${test.data.dir}"/>
    <mkdir dir="${test.data.dir}"/>
    <delete dir="${test.reports.dir}"/>
    <mkdir dir="${test.reports.dir}"/>
    <junit fork="yes" printsummary="withOutAndErr"
	   errorProperty="test.failed"
	   failureProperty="test.failed">
      <jvmarg value="-ea"/>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <!-- In case of testing a single class use: -->
      <!-- ant test -Dtest.class.name qualified classname -->
      <test name="${test.class.name}" todir="${test.data.dir}" if="test.class.name"/>
      <batchtest todir="${test.data.dir}" unless="test.class.name">
	<fileset dir="${test.classes.dir}" includes="**/*Test.class"/>
      </batchtest>
      <classpath>
	<pathelement path="${test.classes.dir}"/>
	<pathelement location="${jar.dir}/${ant.project.name}.jar"/>
	<path refid="lib.classpath"/>
      </classpath>
    </junit>
    <junitreport todir="${test.data.dir}">
      <fileset dir="${test.data.dir}">
	<include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>
    <fail message="Test failed. Check log and/or reports." if="test.failed"/>
  </target>

  <target name="javadocs" depends="compile">
    <delete dir="${javadoc.dir}"/>
    <mkdir dir="${javadoc.dir}"/>
    <javadoc author="true"
	     destdir="${javadoc.dir}"
	     packagenames="rcrr.*"
	     sourcepath="${src.dir}"
	     use="true"
	     version="true"
	     windowtitle="documentation"
	     private="false">
      <classpath refid="lib.classpath"/>
    </javadoc>
  </target>
  
  <target name="clean-build" depends="clean,jar"/>
  
  <target name="main" depends="clean,test,javadocs"/>

  <property name="cloc.executable" value="/usr/bin/cloc"/>  
  <available file="${cloc.executable}" type="file"
             property="cloc.present"/>

  <target name="cloc" if="${cloc.present}">
    <delete dir="${cloc.dir}"/>
    <mkdir dir="${cloc.dir}"/>
    <exec executable="cloc">
      <arg value="--no3"/>
      <arg value="--out=${cloc.dir}/cloc-java-src-report.txt"/>
      <arg value="src"/>
    </exec>
  </target>

  <taskdef resource="checkstyletask.properties"
	   classpath="lib/checkstyle-5.3-all.jar"/>

  <target name="checkstyle"
          description="Generates a report of code convention violations.">
    <delete dir="${checkstyle.reports.dir}"/>
    <mkdir dir="${checkstyle.reports.dir}"/>
    
    <checkstyle config="${docs.checkstyle.dir}/reversi_checks.xml"
                failureProperty="checkstyle.failure"
                failOnViolation="false">
      <formatter type="xml" tofile="${checkstyle.reports.dir}/checkstyle_report.xml"/>
      <fileset dir="src" includes="**/*.java"/>
  </checkstyle>
  
  <xslt in="${checkstyle.reports.dir}/checkstyle_report.xml"
	out="${checkstyle.reports.dir}/checkstyle_report.html"
	style="${docs.checkstyle.dir}/checkstyle-noframes.xsl"/>
  
  </target>

  <property name="findbugs.reports.dir" value="${build.dir}/findbugs"/>
  <property name="findbugs.home" value="/home/rcrr/lisp/prj/findbugs-1.3.9"/>
  <path id="findbugs.classpath">
    <fileset dir="${findbugs.home}/lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
    <classpath refid="findbugs.classpath"/>
  </taskdef>
  <target name="findbugs" depends="jar">
    <delete dir="${findbugs.reports.dir}"/>
    <mkdir dir="${findbugs.reports.dir}"/>
    <findbugs home="${findbugs.home}"
              output="xml:withMessages"
              outputFile="${findbugs.reports.dir}/rcrr.reversi.xml">
      <auxClasspath refid="lib.classpath"/>
      <sourcePath path="${src.dir}"/>
      <class location="${jar.dir}/${ant.project.name}.jar"/>
    </findbugs>
    <xslt in="${findbugs.reports.dir}/rcrr.reversi.xml"
          out="${findbugs.reports.dir}/rcrr.reversi.html"
          style="${findbugs.home}/src/xsl/fancy-hist.xsl"/>
  </target>
  
</project>
